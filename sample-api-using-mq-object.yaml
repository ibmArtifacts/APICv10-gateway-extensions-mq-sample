swagger: '2.0'
info:
  title: MQConnect
  x-ibm-name: mqconnect
  version: 1.0.0
x-ibm-configuration:
  cors:
    enabled: true
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  enforced: true
  testable: true
  assembly:
    execute:
      - parse:
          version: 2.1.0
          title: parse
          parse-settings-reference:
            default: apic-default-parsesettings
          use-content-type: true
      - gatewayscript:
          version: 2.0.0
          title: gatewayscript
          source: "var urlopen  = require('urlopen');\r\n\r\nvar inpMsg = context.get('request.body');\r\nconsole.log('****inpMsg: ' + inpMsg);\r\n\r\nvar dpmqurl = { target: 'dpmq://INPUT_QUEUE_MANAGER_OBJECT_NAME_HERE/?',\r\n    requestQueue: 'INPUT_REQUEST_QUEUE_HERE',\r\n    transactional: false,\r\n    sync: false,\r\n    timeOut: 10000,\r\n    data: inpMsg };\r\nconsole.log('****dpmqurl: ' + JSON.stringify(dpmqurl));\r\n\r\nurlopen.open (dpmqurl, function (error, response) {\r\n    // handle the error when connecting to MQ\r\n    if (error) {\r\n        var msg = error + ' errorCode= ' + error.errorCode;\r\n        console.error(\"MQ error is %s\", msg);\r\n        throw error;\r\n    }\r\n    \r\n    var vResponse = response.headers.MQMD\r\n\tcontext.message.body.write(vResponse);\r\n\tcontext.message.header.set('Content-Type', \"application/xml\");\r\n});"
    finally: []
  properties:
    target-url:
      value: http://example.com/operation-name
      description: The URL of the target service
      encoded: false
  activity-log:
    enabled: true
    success-content: activity
    error-content: payload
basePath: /mqconnect
paths:
  /:
    get:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    put:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    post:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    delete:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    head:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
    patch:
      responses:
        '200':
          description: success
          schema:
            type: string
      consumes: []
      produces: []
schemes:
  - https
